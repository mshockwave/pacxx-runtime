; ModuleID = 'pacxx-link'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v16:16:16-v32:32:32-v64:64:64-v128:128:128-n16:32:64"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: uwtable
define void @foo(i32 %__maxx, i32 %__maxy, i32 %__maxz) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %__z = alloca i32, align 4
  %__y = alloca i32, align 4
  %__x = alloca i32, align 4
  store i32 %__maxx, i32* %1, align 4
  store i32 %__maxy, i32* %2, align 4
  store i32 %__maxz, i32* %3, align 4
  store i32 0, i32* %__z, align 4
  br label %4

; <label>:4                                       ; preds = %33, %0
  %5 = load i32, i32* %__z, align 4
  %6 = load i32, i32* %3, align 4
  %7 = icmp ult i32 %5, %6
  br i1 %7, label %8, label %36

; <label>:8                                       ; preds = %4
  store i32 0, i32* %__y, align 4
  br label %9

; <label>:9                                       ; preds = %29, %8
  %10 = load i32, i32* %__y, align 4
  %11 = load i32, i32* %2, align 4
  %12 = icmp ult i32 %10, %11
  br i1 %12, label %13, label %32

; <label>:13                                      ; preds = %9
  store i32 0, i32* %__x, align 4
  br label %14

; <label>:14                                      ; preds = %25, %13
  %15 = load i32, i32* %__x, align 4
  %16 = load i32, i32* %1, align 4
  %17 = icmp ult i32 %15, %16
  br i1 %17, label %18, label %28

; <label>:18                                      ; preds = %14
  %19 = load i32, i32* %__x, align 4
  %20 = zext i32 %19 to i64
  %21 = load i32, i32* %__y, align 4
  %22 = zext i32 %21 to i64
  %23 = load i32, i32* %__z, align 4
  %24 = zext i32 %23 to i64
  call void @__dummy_kernel(i64 %20, i64 %22, i64 %24)
  br label %25

; <label>:25                                      ; preds = %18
  %26 = load i32, i32* %__x, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %__x, align 4
  br label %14, !llvm.loop !19

; <label>:28                                      ; preds = %14
  br label %29

; <label>:29                                      ; preds = %28
  %30 = load i32, i32* %__y, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %__y, align 4
  br label %9

; <label>:32                                      ; preds = %9
  br label %33

; <label>:33                                      ; preds = %32
  %34 = load i32, i32* %__z, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %__z, align 4
  br label %4

; <label>:36                                      ; preds = %4
  ret void
}

declare void @__dummy_kernel(i64, i64, i64) #1

declare i32 @vprintf(i8* nocapture, i8*)

define void @__printf(i8 addrspace(4)* %ptr, i8* %val) {
entry:
  %0 = addrspacecast i8 addrspace(4)* %ptr to i8*
  %call = call i32 @vprintf(i8* %0, i8* %val)
  ret void
}

define ptx_kernel void @"_ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE"(i8 %callable.coerce, float addrspace(1)* %args, float addrspace(1)* %args1, float addrspace(1)* %args2, i32 %args3) {
_Z13get_global_idj.exit:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ntid.y() #3
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #3
  %2 = call i32 @llvm.nvvm.read.ptx.sreg.tid.y() #3
  %3 = mul i32 %0, %1
  %4 = add i32 %3, %2
  %5 = icmp sgt i32 %args3, 0
  %6 = mul nsw i32 %4, %args3
  br i1 %5, label %.lr.ph.i, label %"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i.exit"

.lr.ph.i:                                         ; preds = %.lr.ph.i, %_Z13get_global_idj.exit
  %.01 = phi i32 [ undef, %_Z13get_global_idj.exit ], [ %11, %.lr.ph.i ]
  %val.0.i = phi float [ 0.000000e+00, %_Z13get_global_idj.exit ], [ %26, %.lr.ph.i ]
  %i.0.i = phi i32 [ 0, %_Z13get_global_idj.exit ], [ %27, %.lr.ph.i ]
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x() #3
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #3
  %9 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x() #3
  %10 = mul i32 %7, %8
  %11 = add i32 %10, %9
  %12 = add nsw i32 %i.0.i, %6
  %13 = sext i32 %12 to i64
  %14 = getelementptr float, float addrspace(1)* %args, i64 %13
  %15 = ptrtoint float addrspace(1)* %14 to i64, !pacxx.addrspace !21
  %16 = inttoptr i64 %15 to float*
  %17 = mul nsw i32 %i.0.i, %args3
  %18 = add nsw i32 %17, %11
  %19 = sext i32 %18 to i64
  %20 = getelementptr float, float addrspace(1)* %args1, i64 %19
  %21 = ptrtoint float addrspace(1)* %20 to i64, !pacxx.addrspace !21
  %22 = inttoptr i64 %21 to float*
  %23 = load float, float* %16, align 4, !alias.scope !22, !noalias !25
  %24 = load float, float* %22, align 4, !alias.scope !28, !noalias !29
  %25 = fmul float %23, %24
  %26 = fadd float %val.0.i, %25
  %27 = add nuw nsw i32 %i.0.i, 1
  %28 = icmp slt i32 %27, %args3
  br i1 %28, label %.lr.ph.i, label %"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i.exit"

"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i.exit": ; preds = %.lr.ph.i, %_Z13get_global_idj.exit
  %val.1.i = phi float [ 0.000000e+00, %_Z13get_global_idj.exit ], [ %26, %.lr.ph.i ]
  %29 = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x() #3
  %30 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #3
  %31 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x() #3
  %32 = mul i32 %29, %30
  %33 = add i32 %32, %31
  %34 = add nsw i32 %6, %33
  %35 = sext i32 %34 to i64
  %36 = getelementptr float, float addrspace(1)* %args2, i64 %35
  %37 = ptrtoint float addrspace(1)* %36 to i64, !pacxx.addrspace !21
  %38 = inttoptr i64 %37 to float*
  store float %val.1.i, float* %38, align 4, !alias.scope !30, !noalias !31
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.ntid.x() #2

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #2

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.tid.x() #2

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.ntid.y() #2

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #2

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.tid.y() #2

attributes #0 = { uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-ma  th"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="fal  se" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2, +avx" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }

!llvm.ident = !{!0, !1, !2, !2}
!nvvm.annotations = !{!3, !4, !5, !4, !6, !6, !6, !6, !7, !7, !6}
!opencl.kernels = !{!8}
!opencl.spir.version = !{!15}
!opencl.ocl.version = !{!15}
!opencl.enable.FP_CONTRACT = !{!16}
!opencl.used.optional.core.features = !{!16}
!opencl.used.extensions = !{!16}
!opencl.compiler.options = !{!16}
!nvvm.internalize.after.link = !{}
!nvvmir.version = !{!15}
!pacxx.kernel = !{!17}
!pacxx.kernel._ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE = !{!18}

!0 = !{!"PACXX"}
!1 = !{!"clang version 3.8.0 (https://lklein14@bitbucket.org/mhaidl/clang.git 35a35447d041832b6e2e25acaf7c825860f8f407) (https://lklein14@bitbucket.org/lklein14/llvm.git 1038c73267508716cd4557f0233750e75c900f93)"}
!2 = !{!"clang version 3.8.0 (https://lklein14@bitbucket.org/mhaidl/clang.git 35a35447d041832b6e2e25acaf7c825860f8f407) (https://lklein14@bitbucket.org/lklein14/llvm.git 3a43138fba13912a93303daeeb802aa41cd21335)"}
!3 = !{void (i8, float addrspace(1)*, float addrspace(1)*, float addrspace(1)*, i32)* @"_ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE", !"kernel", i32 1}
!4 = !{null, !"align", i32 8}
!5 = !{null, !"align", i32 8, !"align", i32 65544, !"align", i32 131080}
!6 = !{null, !"align", i32 16}
!7 = !{null, !"align", i32 16, !"align", i32 65552, !"align", i32 131088}
!8 = !{void (i8, float addrspace(1)*, float addrspace(1)*, float addrspace(1)*, i32)* @"_ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE", !9, !10, !11, !12, !13, !14}
!9 = !{!"kernel_arg_addr_space", i32 0, i32 1, i32 1, i32 1, i32 0}
!10 = !{!"kernel_arg_type", !"class (lambda at Native.cpp:69:15)", !"std::conditional_t<std::is_reference<float*>::value, std::add_lvalue_reference_t<typename generic_to_global<float *>::type>, typename generic_to_global<float *>::type>", !"std::conditional_t<std::is_reference<float*>::value, std::add_lvalue_reference_t<typename generic_to_global<float *>::type>, typename generic_to_global<float *>::type>", !"std::conditional_t<std::is_reference<float*>::value, std::add_lvalue_reference_t<typename generic_to_global<float *>::type>, typename generic_to_global<float *>::type>", !"std::conditional_t<std::is_reference<int>::value, std::add_lvalue_reference_t<typename generic_to_global<int>::type>, typename generic_to_global<int>::type>"}
!11 = !{!"kernel_arg_name", !"callable", !"args", !"args", !"args", !"args"}
!12 = !{!"kernel_arg_access_qual", !"", !"", !"", !"", !""}
!13 = !{!"kernel_arg_base_type", !"class (lambda at Native.cpp:69:15)", !" float*", !" float*", !" float*", !"int"}
!14 = !{!"kernel_arg_type_qual", !"", !"", !"", !"", !""}
!15 = !{i32 1, i32 2}
!16 = !{}
!17 = !{void (i8, float addrspace(1)*, float addrspace(1)*, float addrspace(1)*, i32)* @"_ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE"}
!18 = !{i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 0, i32 0}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.vectorize.enable", i1 false}
!21 = !{i64 0}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i: %a"}
!24 = distinct !{!24, !"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i"}
!25 = !{!26, !27}
!26 = distinct !{!26, !24, !"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i: %b"}
!27 = distinct !{!27, !24, !"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i: %c"}
!28 = !{!26}
!29 = !{!23, !27}
!30 = !{!27}
!31 = !{!23, !26}
