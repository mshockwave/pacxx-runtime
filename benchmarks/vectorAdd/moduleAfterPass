; ModuleID = 'pacxx-link'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

declare void @__dummy_kernel(i64, i64, i64) #0

declare i32 @vprintf(i8* nocapture, i8*)

define void @__printf(i8 addrspace(4)* %ptr, i8* %val) {
entry:
  %0 = addrspacecast i8 addrspace(4)* %ptr to i8*
  %call = call i32 @vprintf(i8* %0, i8* %val)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.ntid.x() #1

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: nounwind readnone
declare void @wfvMetadataFn() #1

; Function Attrs: nounwind readnone
declare float* @wfv_unpack(float*) #1

; Function Attrs: nounwind readnone
declare float @wfv_pack(float) #1

; Function Attrs: nounwind readnone
declare float @wfv_forward(float) #1

; Function Attrs: nounwind readnone
declare float @wfv_unpack_(float) #1

; Function Attrs: nounwind readnone
declare float* @wfv_Wunpack(float*, i32) #1

; Function Attrs: nounwind readnone
declare float @wfv_Wpack(float, float, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare <8 x float> @wfv_Wpack_(float, float, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @wfv_Wunpack_(float, i32) #1

declare void @__vectorized__dummy_kernel(i64, i64, i64)

define void @"__wrapped___ZN5pacxx2v213genericKernelILm0EZ4mainE12$_3675094202JPfS3_S3_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE"(i32 %bidx, i32 %bidy, i32 %bidz, i32 %maxidx, i32 %maxidy, i32 %maxidz, i8* %args) {
constructArgs:
  %args1 = alloca i8*, align 8
  store i8* %args, i8** %args1, align 8
  %args2 = load i8*, i8** %args1, align 8
  %0 = getelementptr inbounds i8, i8* %args2, i64 0
  %1 = bitcast i8* %0 to i8*
  %callable.coerce = load i8, i8* %1, align 8
  %2 = getelementptr inbounds i8, i8* %args2, i64 8
  %3 = bitcast i8* %2 to float addrspace(1)**
  %args3 = load float addrspace(1)*, float addrspace(1)** %3, align 8
  %4 = getelementptr inbounds i8, i8* %args2, i64 16
  %5 = bitcast i8* %4 to float addrspace(1)**
  %args14 = load float addrspace(1)*, float addrspace(1)** %5, align 8
  %6 = getelementptr inbounds i8, i8* %args2, i64 24
  %7 = bitcast i8* %6 to float addrspace(1)**
  %args25 = load float addrspace(1)*, float addrspace(1)** %7, align 8
  %8 = getelementptr inbounds i8, i8* %args2, i64 32
  %9 = bitcast i8* %8 to i32*
  %args36 = load i32, i32* %9, align 8
  br label %entry

entry:                                            ; preds = %constructArgs
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %__z.i = alloca i32, align 4
  %__y.i = alloca i32, align 4
  %__x.i = alloca i32, align 4
  %13 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13)
  %14 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14)
  %15 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15)
  %16 = bitcast i32* %__z.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16)
  %17 = bitcast i32* %__y.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17)
  %18 = bitcast i32* %__x.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18)
  store i32 %maxidx, i32* %10, align 4
  store i32 %maxidy, i32* %11, align 4
  store i32 %maxidz, i32* %12, align 4
  store i32 0, i32* %__z.i, align 4
  br label %19

; <label>:19                                      ; preds = %175, %entry
  %20 = load i32, i32* %__z.i, align 4
  %21 = load i32, i32* %12, align 4
  %22 = icmp ult i32 %20, %21
  br i1 %22, label %23, label %foo.exit

; <label>:23                                      ; preds = %19
  store i32 0, i32* %__y.i, align 4
  br label %24

; <label>:24                                      ; preds = %172, %23
  %25 = load i32, i32* %__y.i, align 4
  %26 = load i32, i32* %11, align 4
  %27 = icmp ult i32 %25, %26
  br i1 %27, label %pre-header.i, label %175

pre-header.i:                                     ; preds = %24
  store i32 0, i32* %__x.i
  br label %loop-header.i

loop-header.i:                                    ; preds = %"__vectorized___ZN5pacxx2v213genericKernelILm0EZ4mainE12$_3675094202JPfS3_S3_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit", %pre-header.i
  %loadVar.i = load i32, i32* %__x.i
  %loadmaxx.i = load i32, i32* %10
  %"increment loop var.i" = add i32 %loadVar.i, 8
  %cmp.i = icmp slt i32 %"increment loop var.i", %loadmaxx.i
  br i1 %cmp.i, label %loop-body.i, label %150

loop-body.i:                                      ; preds = %loop-header.i
  %28 = load i32, i32* %__x.i, align 4
  %29 = zext i32 %28 to i64
  %30 = load i32, i32* %__y.i, align 4
  %31 = zext i32 %30 to i64
  %32 = load i32, i32* %__z.i, align 4
  %33 = zext i32 %32 to i64
  %34 = addrspacecast float addrspace(1)* %args3 to float*
  %35 = addrspacecast float addrspace(1)* %args14 to float*
  %36 = addrspacecast float addrspace(1)* %args25 to float*
  %idx = load i32, i32* %__x.i
  %37 = mul i32 %maxidx, %bidx
  %38 = add i32 %37, %idx
  %39 = insertelement <8 x i32> undef, i32 %38, i32 0
  %40 = insertelement <8 x i32> %39, i32 %38, i32 1
  %41 = insertelement <8 x i32> %40, i32 %38, i32 2
  %42 = insertelement <8 x i32> %41, i32 %38, i32 3
  %43 = insertelement <8 x i32> %42, i32 %38, i32 4
  %44 = insertelement <8 x i32> %43, i32 %38, i32 5
  %45 = insertelement <8 x i32> %44, i32 %38, i32 6
  %46 = insertelement <8 x i32> %45, i32 %38, i32 7
  %bcCons.i = add <8 x i32> %46, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %47 = icmp slt <8 x i32> %bcCons.i, zeroinitializer
  %48 = xor <8 x i1> %47, <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>
  %49 = sext i32 %38 to i64
  %50 = getelementptr float, float* %34, i64 %49
  %pktPtrCast.i = bitcast float* %50 to <8 x float>*
  %51 = getelementptr float, float* %35, i64 %49
  %pktPtrCast67.i = bitcast float* %51 to <8 x float>*
  %52 = getelementptr <8 x float>, <8 x float>* %pktPtrCast.i, i32 0, i32 0
  %53 = getelementptr <8 x float>, <8 x float>* %pktPtrCast.i, i32 0, i32 1
  %54 = getelementptr <8 x float>, <8 x float>* %pktPtrCast.i, i32 0, i32 2
  %55 = getelementptr <8 x float>, <8 x float>* %pktPtrCast.i, i32 0, i32 3
  %56 = getelementptr <8 x float>, <8 x float>* %pktPtrCast.i, i32 0, i32 4
  %57 = getelementptr <8 x float>, <8 x float>* %pktPtrCast.i, i32 0, i32 5
  %58 = getelementptr <8 x float>, <8 x float>* %pktPtrCast.i, i32 0, i32 6
  %59 = getelementptr <8 x float>, <8 x float>* %pktPtrCast.i, i32 0, i32 7
  %60 = extractelement <8 x i1> %47, i32 0
  br i1 %60, label %casc.exec0.i, label %casc.if1.i

casc.exec0.i:                                     ; preds = %loop-body.i
  %61 = load float, float* %52, align 4
  br label %casc.if1.i

casc.if1.i:                                       ; preds = %casc.exec0.i, %loop-body.i
  %62 = phi float [ %61, %casc.exec0.i ], [ undef, %loop-body.i ]
  %63 = extractelement <8 x i1> %47, i32 1
  br i1 %63, label %casc.exec1.i, label %casc.if2.i

casc.exec1.i:                                     ; preds = %casc.if1.i
  %64 = load float, float* %53, align 4
  br label %casc.if2.i

casc.if2.i:                                       ; preds = %casc.exec1.i, %casc.if1.i
  %65 = phi float [ %64, %casc.exec1.i ], [ undef, %casc.if1.i ]
  %66 = extractelement <8 x i1> %47, i32 2
  br i1 %66, label %casc.exec2.i, label %casc.if3.i

casc.exec2.i:                                     ; preds = %casc.if2.i
  %67 = load float, float* %54, align 4
  br label %casc.if3.i

casc.if3.i:                                       ; preds = %casc.exec2.i, %casc.if2.i
  %68 = phi float [ %67, %casc.exec2.i ], [ undef, %casc.if2.i ]
  %69 = extractelement <8 x i1> %47, i32 3
  br i1 %69, label %casc.exec3.i, label %casc.if4.i

casc.exec3.i:                                     ; preds = %casc.if3.i
  %70 = load float, float* %55, align 4
  br label %casc.if4.i

casc.if4.i:                                       ; preds = %casc.exec3.i, %casc.if3.i
  %71 = phi float [ %70, %casc.exec3.i ], [ undef, %casc.if3.i ]
  %72 = extractelement <8 x i1> %47, i32 4
  br i1 %72, label %casc.exec4.i, label %casc.if5.i

casc.exec4.i:                                     ; preds = %casc.if4.i
  %73 = load float, float* %56, align 4
  br label %casc.if5.i

casc.if5.i:                                       ; preds = %casc.exec4.i, %casc.if4.i
  %74 = phi float [ %73, %casc.exec4.i ], [ undef, %casc.if4.i ]
  %75 = extractelement <8 x i1> %47, i32 5
  br i1 %75, label %casc.exec5.i, label %casc.if6.i

casc.exec5.i:                                     ; preds = %casc.if5.i
  %76 = load float, float* %57, align 4
  br label %casc.if6.i

casc.if6.i:                                       ; preds = %casc.exec5.i, %casc.if5.i
  %77 = phi float [ %76, %casc.exec5.i ], [ undef, %casc.if5.i ]
  %78 = extractelement <8 x i1> %47, i32 6
  br i1 %78, label %casc.exec6.i, label %casc.if7.i

casc.exec6.i:                                     ; preds = %casc.if6.i
  %79 = load float, float* %58, align 4
  br label %casc.if7.i

casc.if7.i:                                       ; preds = %casc.exec6.i, %casc.if6.i
  %80 = phi float [ %79, %casc.exec6.i ], [ undef, %casc.if6.i ]
  %81 = extractelement <8 x i1> %47, i32 7
  br i1 %81, label %casc.exec7.i, label %_Z13get_global_idj.exit4..casc.end.i

casc.exec7.i:                                     ; preds = %casc.if7.i
  %82 = load float, float* %59, align 4
  br label %_Z13get_global_idj.exit4..casc.end.i

_Z13get_global_idj.exit4..casc.end.i:             ; preds = %casc.exec7.i, %casc.if7.i
  %83 = phi float [ %82, %casc.exec7.i ], [ undef, %casc.if7.i ]
  %84 = insertelement <8 x float> undef, float %62, i32 0
  %85 = insertelement <8 x float> %84, float %65, i32 1
  %86 = insertelement <8 x float> %85, float %68, i32 2
  %87 = insertelement <8 x float> %86, float %71, i32 3
  %88 = insertelement <8 x float> %87, float %74, i32 4
  %89 = insertelement <8 x float> %88, float %77, i32 5
  %90 = insertelement <8 x float> %89, float %80, i32 6
  %91 = insertelement <8 x float> %90, float %83, i32 7
  %92 = getelementptr <8 x float>, <8 x float>* %pktPtrCast67.i, i32 0, i32 0
  %93 = getelementptr <8 x float>, <8 x float>* %pktPtrCast67.i, i32 0, i32 1
  %94 = getelementptr <8 x float>, <8 x float>* %pktPtrCast67.i, i32 0, i32 2
  %95 = getelementptr <8 x float>, <8 x float>* %pktPtrCast67.i, i32 0, i32 3
  %96 = getelementptr <8 x float>, <8 x float>* %pktPtrCast67.i, i32 0, i32 4
  %97 = getelementptr <8 x float>, <8 x float>* %pktPtrCast67.i, i32 0, i32 5
  %98 = getelementptr <8 x float>, <8 x float>* %pktPtrCast67.i, i32 0, i32 6
  %99 = getelementptr <8 x float>, <8 x float>* %pktPtrCast67.i, i32 0, i32 7
  %100 = extractelement <8 x i1> %47, i32 0
  br i1 %100, label %casc.exec037.i, label %casc.if138.i

casc.exec037.i:                                   ; preds = %_Z13get_global_idj.exit4..casc.end.i
  %101 = load float, float* %92, align 4
  br label %casc.if138.i

casc.if138.i:                                     ; preds = %casc.exec037.i, %_Z13get_global_idj.exit4..casc.end.i
  %102 = phi float [ %101, %casc.exec037.i ], [ undef, %_Z13get_global_idj.exit4..casc.end.i ]
  %103 = extractelement <8 x i1> %47, i32 1
  br i1 %103, label %casc.exec139.i, label %casc.if240.i

casc.exec139.i:                                   ; preds = %casc.if138.i
  %104 = load float, float* %93, align 4
  br label %casc.if240.i

casc.if240.i:                                     ; preds = %casc.exec139.i, %casc.if138.i
  %105 = phi float [ %104, %casc.exec139.i ], [ undef, %casc.if138.i ]
  %106 = extractelement <8 x i1> %47, i32 2
  br i1 %106, label %casc.exec241.i, label %casc.if342.i

casc.exec241.i:                                   ; preds = %casc.if240.i
  %107 = load float, float* %94, align 4
  br label %casc.if342.i

casc.if342.i:                                     ; preds = %casc.exec241.i, %casc.if240.i
  %108 = phi float [ %107, %casc.exec241.i ], [ undef, %casc.if240.i ]
  %109 = extractelement <8 x i1> %47, i32 3
  br i1 %109, label %casc.exec343.i, label %casc.if444.i

casc.exec343.i:                                   ; preds = %casc.if342.i
  %110 = load float, float* %95, align 4
  br label %casc.if444.i

casc.if444.i:                                     ; preds = %casc.exec343.i, %casc.if342.i
  %111 = phi float [ %110, %casc.exec343.i ], [ undef, %casc.if342.i ]
  %112 = extractelement <8 x i1> %47, i32 4
  br i1 %112, label %casc.exec445.i, label %casc.if546.i

casc.exec445.i:                                   ; preds = %casc.if444.i
  %113 = load float, float* %96, align 4
  br label %casc.if546.i

casc.if546.i:                                     ; preds = %casc.exec445.i, %casc.if444.i
  %114 = phi float [ %113, %casc.exec445.i ], [ undef, %casc.if444.i ]
  %115 = extractelement <8 x i1> %47, i32 5
  br i1 %115, label %casc.exec547.i, label %casc.if648.i

casc.exec547.i:                                   ; preds = %casc.if546.i
  %116 = load float, float* %97, align 4
  br label %casc.if648.i

casc.if648.i:                                     ; preds = %casc.exec547.i, %casc.if546.i
  %117 = phi float [ %116, %casc.exec547.i ], [ undef, %casc.if546.i ]
  %118 = extractelement <8 x i1> %47, i32 6
  br i1 %118, label %casc.exec649.i, label %casc.if750.i

casc.exec649.i:                                   ; preds = %casc.if648.i
  %119 = load float, float* %98, align 4
  br label %casc.if750.i

casc.if750.i:                                     ; preds = %casc.exec649.i, %casc.if648.i
  %120 = phi float [ %119, %casc.exec649.i ], [ undef, %casc.if648.i ]
  %121 = extractelement <8 x i1> %47, i32 7
  br i1 %121, label %casc.exec751.i, label %_Z13get_global_idj.exit4..casc.end.casc.end.i

casc.exec751.i:                                   ; preds = %casc.if750.i
  %122 = load float, float* %99, align 4
  br label %_Z13get_global_idj.exit4..casc.end.casc.end.i

_Z13get_global_idj.exit4..casc.end.casc.end.i:    ; preds = %casc.exec751.i, %casc.if750.i
  %123 = phi float [ %122, %casc.exec751.i ], [ undef, %casc.if750.i ]
  %124 = insertelement <8 x float> undef, float %102, i32 0
  %125 = insertelement <8 x float> %124, float %105, i32 1
  %126 = insertelement <8 x float> %125, float %108, i32 2
  %127 = insertelement <8 x float> %126, float %111, i32 3
  %128 = insertelement <8 x float> %127, float %114, i32 4
  %129 = insertelement <8 x float> %128, float %117, i32 5
  %130 = insertelement <8 x float> %129, float %120, i32 6
  %131 = insertelement <8 x float> %130, float %123, i32 7
  %132 = fadd <8 x float> %91, %131
  %133 = getelementptr float, float* %36, i64 %49
  %pktPtrCast68.i = bitcast float* %133 to <8 x float>*
  %unpackW2169.i = extractelement <8 x float> %132, i32 0
  %unpackW2270.i = extractelement <8 x float> %132, i32 1
  %unpackW2371.i = extractelement <8 x float> %132, i32 2
  %unpackW2472.i = extractelement <8 x float> %132, i32 3
  %unpackW2573.i = extractelement <8 x float> %132, i32 4
  %unpackW2674.i = extractelement <8 x float> %132, i32 5
  %unpackW2775.i = extractelement <8 x float> %132, i32 6
  %unpackW2876.i = extractelement <8 x float> %132, i32 7
  %134 = getelementptr <8 x float>, <8 x float>* %pktPtrCast68.i, i32 0, i32 0
  %135 = getelementptr <8 x float>, <8 x float>* %pktPtrCast68.i, i32 0, i32 1
  %136 = getelementptr <8 x float>, <8 x float>* %pktPtrCast68.i, i32 0, i32 2
  %137 = getelementptr <8 x float>, <8 x float>* %pktPtrCast68.i, i32 0, i32 3
  %138 = getelementptr <8 x float>, <8 x float>* %pktPtrCast68.i, i32 0, i32 4
  %139 = getelementptr <8 x float>, <8 x float>* %pktPtrCast68.i, i32 0, i32 5
  %140 = getelementptr <8 x float>, <8 x float>* %pktPtrCast68.i, i32 0, i32 6
  %141 = getelementptr <8 x float>, <8 x float>* %pktPtrCast68.i, i32 0, i32 7
  %142 = extractelement <8 x i1> %47, i32 0
  br i1 %142, label %casc.exec052.i, label %casc.if153.i

casc.exec052.i:                                   ; preds = %_Z13get_global_idj.exit4..casc.end.casc.end.i
  store float %unpackW2169.i, float* %134, align 4
  br label %casc.if153.i

casc.if153.i:                                     ; preds = %casc.exec052.i, %_Z13get_global_idj.exit4..casc.end.casc.end.i
  %143 = extractelement <8 x i1> %47, i32 1
  br i1 %143, label %casc.exec154.i, label %casc.if255.i

casc.exec154.i:                                   ; preds = %casc.if153.i
  store float %unpackW2270.i, float* %135, align 4
  br label %casc.if255.i

casc.if255.i:                                     ; preds = %casc.exec154.i, %casc.if153.i
  %144 = extractelement <8 x i1> %47, i32 2
  br i1 %144, label %casc.exec256.i, label %casc.if357.i

casc.exec256.i:                                   ; preds = %casc.if255.i
  store float %unpackW2371.i, float* %136, align 4
  br label %casc.if357.i

casc.if357.i:                                     ; preds = %casc.exec256.i, %casc.if255.i
  %145 = extractelement <8 x i1> %47, i32 3
  br i1 %145, label %casc.exec358.i, label %casc.if459.i

casc.exec358.i:                                   ; preds = %casc.if357.i
  store float %unpackW2472.i, float* %137, align 4
  br label %casc.if459.i

casc.if459.i:                                     ; preds = %casc.exec358.i, %casc.if357.i
  %146 = extractelement <8 x i1> %47, i32 4
  br i1 %146, label %casc.exec460.i, label %casc.if561.i

casc.exec460.i:                                   ; preds = %casc.if459.i
  store float %unpackW2573.i, float* %138, align 4
  br label %casc.if561.i

casc.if561.i:                                     ; preds = %casc.exec460.i, %casc.if459.i
  %147 = extractelement <8 x i1> %47, i32 5
  br i1 %147, label %casc.exec562.i, label %casc.if663.i

casc.exec562.i:                                   ; preds = %casc.if561.i
  store float %unpackW2674.i, float* %139, align 4
  br label %casc.if663.i

casc.if663.i:                                     ; preds = %casc.exec562.i, %casc.if561.i
  %148 = extractelement <8 x i1> %47, i32 6
  br i1 %148, label %casc.exec664.i, label %casc.if765.i

casc.exec664.i:                                   ; preds = %casc.if663.i
  store float %unpackW2775.i, float* %140, align 4
  br label %casc.if765.i

casc.if765.i:                                     ; preds = %casc.exec664.i, %casc.if663.i
  %149 = extractelement <8 x i1> %47, i32 7
  br i1 %149, label %casc.exec766.i, label %"__vectorized___ZN5pacxx2v213genericKernelILm0EZ4mainE12$_3675094202JPfS3_S3_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit"

casc.exec766.i:                                   ; preds = %casc.if765.i
  store float %unpackW2876.i, float* %141, align 4
  br label %"__vectorized___ZN5pacxx2v213genericKernelILm0EZ4mainE12$_3675094202JPfS3_S3_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit"

"__vectorized___ZN5pacxx2v213genericKernelILm0EZ4mainE12$_3675094202JPfS3_S3_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit": ; preds = %casc.if765.i, %casc.exec766.i
  %loadVar1.i = load i32, i32* %__x.i
  %"increment loop var2.i" = add i32 %loadVar1.i, 8
  store i32 %"increment loop var2.i", i32* %__x.i
  br label %loop-header.i

; <label>:150                                     ; preds = %loop-header.i
  br label %151

; <label>:151                                     ; preds = %"_ZN5pacxx2v213genericKernelILm0EZ4mainE12$_3675094202JPfS3_S3_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit", %150
  %152 = load i32, i32* %__x.i, align 4
  %153 = load i32, i32* %10, align 4
  %154 = icmp ult i32 %152, %153
  br i1 %154, label %155, label %172

; <label>:155                                     ; preds = %151
  %"copied load.i" = load i32, i32* %__x.i
  %156 = zext i32 %"copied load.i" to i64
  %157 = addrspacecast float addrspace(1)* %args3 to float*
  %158 = addrspacecast float addrspace(1)* %args14 to float*
  %159 = addrspacecast float addrspace(1)* %args25 to float*
  %idx7 = load i32, i32* %__x.i
  %160 = mul i32 %maxidx, %bidx
  %161 = add i32 %160, %idx7
  %162 = icmp slt i32 %161, 0
  br i1 %162, label %_Z13get_global_idj.exit4.i, label %"_ZN5pacxx2v213genericKernelILm0EZ4mainE12$_3675094202JPfS3_S3_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit"

_Z13get_global_idj.exit4.i:                       ; preds = %155
  %163 = sext i32 %161 to i64
  %164 = getelementptr inbounds float, float* %157, i64 %163
  %165 = getelementptr inbounds float, float* %158, i64 %163
  %166 = load float, float* %164, align 4
  %167 = load float, float* %165, align 4
  %168 = fadd float %166, %167
  %169 = getelementptr inbounds float, float* %159, i64 %163
  store float %168, float* %169, align 4
  br label %"_ZN5pacxx2v213genericKernelILm0EZ4mainE12$_3675094202JPfS3_S3_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit"

"_ZN5pacxx2v213genericKernelILm0EZ4mainE12$_3675094202JPfS3_S3_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit": ; preds = %155, %_Z13get_global_idj.exit4.i
  %170 = load i32, i32* %__x.i, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %__x.i, align 4
  br label %151, !llvm.loop !18

; <label>:172                                     ; preds = %151
  %173 = load i32, i32* %__y.i, align 4
  %174 = add i32 %173, 1
  store i32 %174, i32* %__y.i, align 4
  br label %24

; <label>:175                                     ; preds = %24
  %176 = load i32, i32* %__z.i, align 4
  %177 = add i32 %176, 1
  store i32 %177, i32* %__z.i, align 4
  br label %19

foo.exit:                                         ; preds = %19
  %178 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %178)
  %179 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %179)
  %180 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %180)
  %181 = bitcast i32* %__z.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %181)
  %182 = bitcast i32* %__y.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %182)
  %183 = bitcast i32* %__x.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %183)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

attributes #0 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="fal  se" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2, +avx" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }

!llvm.ident = !{!0, !1, !1, !1}
!nvvm.annotations = !{!2, !3, !4, !3, !5, !5, !5, !5, !6, !6, !5}
!opencl.kernels = !{!7}
!opencl.spir.version = !{!14}
!opencl.ocl.version = !{!14}
!opencl.enable.FP_CONTRACT = !{!15}
!opencl.used.optional.core.features = !{!15}
!opencl.used.extensions = !{!15}
!opencl.compiler.options = !{!15}
!nvvm.internalize.after.link = !{}
!nvvmir.version = !{!14}
!pacxx.kernel = !{!16}
!pacxx.kernel._ZN5pacxx2v213genericKernelILm0EZ4mainE12$_3675094202JPfS3_S3_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE = !{!17}

!0 = !{!"PACXX"}
!1 = !{!"clang version 3.8.0 (https://lklein14@bitbucket.org/mhaidl/clang.git 35a35447d041832b6e2e25acaf7c825860f8f407) (https://lklein14@bitbucket.org/lklein14/llvm.git 1038c73267508716cd4557f0233750e75c900f93)"}
!2 = !{null, !"kernel", i32 1}
!3 = !{null, !"align", i32 8}
!4 = !{null, !"align", i32 8, !"align", i32 65544, !"align", i32 131080}
!5 = !{null, !"align", i32 16}
!6 = !{null, !"align", i32 16, !"align", i32 65552, !"align", i32 131088}
!7 = !{null, !8, !9, !10, !11, !12, !13}
!8 = !{!"kernel_arg_addr_space", i32 0, i32 1, i32 1, i32 1, i32 0}
!9 = !{!"kernel_arg_type", !"class (lambda at Native.cpp:55:15)", !"std::conditional_t<std::is_reference<float*>::value, std::add_lvalue_reference_t<typename generic_to_global<float *>::type>, typename generic_to_global<float *>::type>", !"std::conditional_t<std::is_reference<float*>::value, std::add_lvalue_reference_t<typename generic_to_global<float *>::type>, typename generic_to_global<float *>::type>", !"std::conditional_t<std::is_reference<float*>::value, std::add_lvalue_reference_t<typename generic_to_global<float *>::type>, typename generic_to_global<float *>::type>", !"std::conditional_t<std::is_reference<int>::value, std::add_lvalue_reference_t<typename generic_to_global<int>::type>, typename generic_to_global<int>::type>"}
!10 = !{!"kernel_arg_name", !"callable", !"args", !"args", !"args", !"args"}
!11 = !{!"kernel_arg_access_qual", !"", !"", !"", !"", !""}
!12 = !{!"kernel_arg_base_type", !"class (lambda at Native.cpp:55:15)", !" float*", !" float*", !" float*", !"int"}
!13 = !{!"kernel_arg_type_qual", !"", !"", !"", !"", !""}
!14 = !{i32 1, i32 2}
!15 = !{}
!16 = distinct !{null}
!17 = !{i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 0, i32 0}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.vectorize.enable", i1 false}
