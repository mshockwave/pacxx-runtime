; ModuleID = 'pacxx-link'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

declare void @__dummy_kernel(i64, i64, i64) #0

declare i32 @vprintf(i8* nocapture, i8*)

define void @__printf(i8 addrspace(4)* %ptr, i8* %val) {
entry:
  %0 = addrspacecast i8 addrspace(4)* %ptr to i8*
  %call = call i32 @vprintf(i8* %0, i8* %val)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.ntid.x() #1

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.ntid.y() #1

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

; Function Attrs: nounwind readnone
declare i32 @llvm.nvvm.read.ptx.sreg.tid.y() #1

; Function Attrs: nounwind readnone
declare void @wfvMetadataFn() #1

declare void @__vectorized__dummy_kernel(i64, i64, i64)

define void @"__wrapped___ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE"(i32 %bidx, i32 %bidy, i32 %bidz, i32 %maxidx, i32 %maxidy, i32 %maxidz, i8* %args) {
constructArgs:
  %args1 = alloca i8*, align 8
  store i8* %args, i8** %args1, align 8
  %args2 = load i8*, i8** %args1, align 8
  %0 = getelementptr inbounds i8, i8* %args2, i64 0
  %1 = bitcast i8* %0 to i8*
  %callable.coerce = load i8, i8* %1, align 8
  %2 = getelementptr inbounds i8, i8* %args2, i64 8
  %3 = bitcast i8* %2 to float addrspace(1)**
  %args3 = load float addrspace(1)*, float addrspace(1)** %3, align 8
  %4 = getelementptr inbounds i8, i8* %args2, i64 16
  %5 = bitcast i8* %4 to float addrspace(1)**
  %args14 = load float addrspace(1)*, float addrspace(1)** %5, align 8
  %6 = getelementptr inbounds i8, i8* %args2, i64 24
  %7 = bitcast i8* %6 to float addrspace(1)**
  %args25 = load float addrspace(1)*, float addrspace(1)** %7, align 8
  %8 = getelementptr inbounds i8, i8* %args2, i64 32
  %9 = bitcast i8* %8 to i32*
  %args36 = load i32, i32* %9, align 8
  br label %entry

entry:                                            ; preds = %constructArgs
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %__z.i = alloca i32, align 4
  %__y.i = alloca i32, align 4
  %__x.i = alloca i32, align 4
  %13 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13)
  %14 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14)
  %15 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15)
  %16 = bitcast i32* %__z.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16)
  %17 = bitcast i32* %__y.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17)
  %18 = bitcast i32* %__x.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18)
  store i32 %maxidx, i32* %10, align 4
  store i32 %maxidy, i32* %11, align 4
  store i32 %maxidz, i32* %12, align 4
  store i32 0, i32* %__z.i, align 4
  br label %19

; <label>:19                                      ; preds = %102, %entry
  %20 = load i32, i32* %__z.i, align 4
  %21 = load i32, i32* %12, align 4
  %22 = icmp ult i32 %20, %21
  br i1 %22, label %23, label %foo.exit

; <label>:23                                      ; preds = %19
  store i32 0, i32* %__y.i, align 4
  br label %24

; <label>:24                                      ; preds = %99, %23
  %25 = load i32, i32* %__y.i, align 4
  %26 = load i32, i32* %11, align 4
  %27 = icmp ult i32 %25, %26
  br i1 %27, label %pre-header.i, label %102

pre-header.i:                                     ; preds = %24
  store i32 0, i32* %__x.i
  br label %loop-header.i

loop-header.i:                                    ; preds = %"__vectorized___ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit", %pre-header.i
  %loadVar.i = load i32, i32* %__x.i
  %loadmaxx.i = load i32, i32* %10
  %"increment loop var.i" = add i32 %loadVar.i, 8
  %cmp.i = icmp slt i32 %"increment loop var.i", %loadmaxx.i
  br i1 %cmp.i, label %loop-body.i, label %66

loop-body.i:                                      ; preds = %loop-header.i
  %28 = load i32, i32* %__x.i, align 4
  %29 = zext i32 %28 to i64
  %30 = load i32, i32* %__y.i, align 4
  %31 = zext i32 %30 to i64
  %32 = load i32, i32* %__z.i, align 4
  %33 = zext i32 %32 to i64
  %34 = addrspacecast float addrspace(1)* %args3 to float*
  %35 = addrspacecast float addrspace(1)* %args14 to float*
  %36 = addrspacecast float addrspace(1)* %args25 to float*
  %idy = load i32, i32* %__y.i
  %37 = mul i32 %maxidy, %bidy
  %38 = add i32 %37, %idy
  %39 = mul nsw i32 %38, 1024
  br label %.lr.ph.i..i

.lr.ph.i..i:                                      ; preds = %.lr.ph.i..lr.ph.i_crit_edge..i, %loop-body.i
  %val.0.i..i = phi <8 x float> [ zeroinitializer, %loop-body.i ], [ %60, %.lr.ph.i..lr.ph.i_crit_edge..i ]
  %i.0.i..i = phi i32 [ 0, %loop-body.i ], [ %61, %.lr.ph.i..lr.ph.i_crit_edge..i ]
  %idx = load i32, i32* %__x.i
  %40 = mul i32 %maxidx, %bidx
  %41 = add i32 %40, %idx
  %42 = add nsw i32 %i.0.i..i, %39
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, float* %34, i64 %43
  %45 = mul nsw i32 %i.0.i..i, 1024
  %46 = add nsw i32 %45, %41
  %47 = sext i32 %46 to i64
  %48 = getelementptr float, float* %35, i64 %47
  %pktPtrCast.i = bitcast float* %48 to <8 x float>*
  %49 = load float, float* %44, align 4, !alias.scope !19, !noalias !22
  %50 = load <8 x float>, <8 x float>* %pktPtrCast.i, align 1, !alias.scope !25, !noalias !26
  %51 = insertelement <8 x float> undef, float %49, i32 0
  %52 = insertelement <8 x float> %51, float %49, i32 1
  %53 = insertelement <8 x float> %52, float %49, i32 2
  %54 = insertelement <8 x float> %53, float %49, i32 3
  %55 = insertelement <8 x float> %54, float %49, i32 4
  %56 = insertelement <8 x float> %55, float %49, i32 5
  %57 = insertelement <8 x float> %56, float %49, i32 6
  %58 = insertelement <8 x float> %57, float %49, i32 7
  %59 = fmul <8 x float> %58, %50
  %60 = fadd <8 x float> %val.0.i..i, %59
  %61 = add nuw nsw i32 %i.0.i..i, 1
  %62 = icmp slt i32 %61, 1024
  br i1 %62, label %.lr.ph.i..lr.ph.i_crit_edge..i, label %"__vectorized___ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit"

.lr.ph.i..lr.ph.i_crit_edge..i:                   ; preds = %.lr.ph.i..i
  br label %.lr.ph.i..i

"__vectorized___ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit": ; preds = %.lr.ph.i..i
  %63 = add nsw i32 %39, %41
  %64 = sext i32 %63 to i64
  %65 = getelementptr float, float* %36, i64 %64
  %pktPtrCast1.i = bitcast float* %65 to <8 x float>*
  store <8 x float> %60, <8 x float>* %pktPtrCast1.i, align 1, !alias.scope !27, !noalias !28
  %loadVar1.i = load i32, i32* %__x.i
  %"increment loop var2.i" = add i32 %loadVar1.i, 8
  store i32 %"increment loop var2.i", i32* %__x.i
  br label %loop-header.i

; <label>:66                                      ; preds = %loop-header.i
  br label %67

; <label>:67                                      ; preds = %"_ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit", %66
  %68 = load i32, i32* %__x.i, align 4
  %69 = load i32, i32* %10, align 4
  %70 = icmp ult i32 %68, %69
  br i1 %70, label %71, label %99

; <label>:71                                      ; preds = %67
  %"copied load.i" = load i32, i32* %__x.i
  %72 = zext i32 %"copied load.i" to i64
  %73 = addrspacecast float addrspace(1)* %args3 to float*
  %74 = addrspacecast float addrspace(1)* %args14 to float*
  %75 = addrspacecast float addrspace(1)* %args25 to float*
  %idy7 = load i32, i32* %__y.i
  %76 = mul i32 %maxidy, %bidy
  %77 = add i32 %76, %idy7
  %78 = mul nsw i32 %77, 1024
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %71
  %val.0.i.i = phi float [ 0.000000e+00, %71 ], [ %91, %.lr.ph.i.i ]
  %i.0.i.i = phi i32 [ 0, %71 ], [ %92, %.lr.ph.i.i ]
  %idx8 = load i32, i32* %__x.i
  %79 = mul i32 %maxidx, %bidx
  %80 = add i32 %79, %idx8
  %81 = add nsw i32 %i.0.i.i, %78
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds float, float* %73, i64 %82
  %84 = mul nsw i32 %i.0.i.i, 1024
  %85 = add nsw i32 %84, %80
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds float, float* %74, i64 %86
  %88 = load float, float* %83, align 4, !alias.scope !29, !noalias !32
  %89 = load float, float* %87, align 4, !alias.scope !35, !noalias !36
  %90 = fmul float %88, %89
  %91 = fadd float %val.0.i.i, %90
  %92 = add nuw nsw i32 %i.0.i.i, 1
  %93 = icmp slt i32 %92, 1024
  br i1 %93, label %.lr.ph.i.i, label %"_ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit"

"_ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE.exit": ; preds = %.lr.ph.i.i
  %94 = add nsw i32 %78, %80
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds float, float* %75, i64 %95
  store float %91, float* %96, align 4, !alias.scope !37, !noalias !38
  %97 = load i32, i32* %__x.i, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %__x.i, align 4
  br label %67, !llvm.loop !39

; <label>:99                                      ; preds = %67
  %100 = load i32, i32* %__y.i, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %__y.i, align 4
  br label %24

; <label>:102                                     ; preds = %24
  %103 = load i32, i32* %__z.i, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %__z.i, align 4
  br label %19

foo.exit:                                         ; preds = %19
  %105 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %105)
  %106 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %106)
  %107 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %107)
  %108 = bitcast i32* %__z.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %108)
  %109 = bitcast i32* %__y.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %109)
  %110 = bitcast i32* %__x.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %110)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

attributes #0 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="fal  se" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2, +avx" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }

!llvm.ident = !{!0, !1, !2, !2}
!nvvm.annotations = !{!3, !4, !5, !4, !6, !6, !6, !6, !7, !7, !6}
!opencl.kernels = !{!8}
!opencl.spir.version = !{!15}
!opencl.ocl.version = !{!15}
!opencl.enable.FP_CONTRACT = !{!16}
!opencl.used.optional.core.features = !{!16}
!opencl.used.extensions = !{!16}
!opencl.compiler.options = !{!16}
!nvvm.internalize.after.link = !{}
!nvvmir.version = !{!15}
!pacxx.kernel = !{!17}
!pacxx.kernel._ZN5pacxx2v213genericKernelILm0EZ10calcNativePfS2_S2_mE12$_1209590108JS2_S2_S2_iEEEvT0_DpNSt3__111conditionalIXsr3std12is_referenceIT1_EE5valueENS5_20add_lvalue_referenceINS0_17generic_to_globalIS7_E4typeEE4typeESB_E4typeE = !{!18}

!0 = !{!"PACXX"}
!1 = !{!"clang version 3.8.0 (https://lklein14@bitbucket.org/mhaidl/clang.git 35a35447d041832b6e2e25acaf7c825860f8f407) (https://lklein14@bitbucket.org/lklein14/llvm.git 1038c73267508716cd4557f0233750e75c900f93)"}
!2 = !{!"clang version 3.8.0 (https://lklein14@bitbucket.org/mhaidl/clang.git 35a35447d041832b6e2e25acaf7c825860f8f407) (https://lklein14@bitbucket.org/lklein14/llvm.git 3a43138fba13912a93303daeeb802aa41cd21335)"}
!3 = !{null, !"kernel", i32 1}
!4 = !{null, !"align", i32 8}
!5 = !{null, !"align", i32 8, !"align", i32 65544, !"align", i32 131080}
!6 = !{null, !"align", i32 16}
!7 = !{null, !"align", i32 16, !"align", i32 65552, !"align", i32 131088}
!8 = !{null, !9, !10, !11, !12, !13, !14}
!9 = !{!"kernel_arg_addr_space", i32 0, i32 1, i32 1, i32 1, i32 0}
!10 = !{!"kernel_arg_type", !"class (lambda at Native.cpp:69:15)", !"std::conditional_t<std::is_reference<float*>::value, std::add_lvalue_reference_t<typename generic_to_global<float *>::type>, typename generic_to_global<float *>::type>", !"std::conditional_t<std::is_reference<float*>::value, std::add_lvalue_reference_t<typename generic_to_global<float *>::type>, typename generic_to_global<float *>::type>", !"std::conditional_t<std::is_reference<float*>::value, std::add_lvalue_reference_t<typename generic_to_global<float *>::type>, typename generic_to_global<float *>::type>", !"std::conditional_t<std::is_reference<int>::value, std::add_lvalue_reference_t<typename generic_to_global<int>::type>, typename generic_to_global<int>::type>"}
!11 = !{!"kernel_arg_name", !"callable", !"args", !"args", !"args", !"args"}
!12 = !{!"kernel_arg_access_qual", !"", !"", !"", !"", !""}
!13 = !{!"kernel_arg_base_type", !"class (lambda at Native.cpp:69:15)", !" float*", !" float*", !" float*", !"int"}
!14 = !{!"kernel_arg_type_qual", !"", !"", !"", !"", !""}
!15 = !{i32 1, i32 2}
!16 = !{}
!17 = distinct !{null}
!18 = !{i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 0, i32 0}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i: %a"}
!21 = distinct !{!21, !"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i"}
!22 = !{!23, !24}
!23 = distinct !{!23, !21, !"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i: %b"}
!24 = distinct !{!24, !21, !"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i: %c"}
!25 = !{!23}
!26 = !{!20, !24}
!27 = !{!24}
!28 = !{!20, !23}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i: %a"}
!31 = distinct !{!31, !"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i"}
!32 = !{!33, !34}
!33 = distinct !{!33, !31, !"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i: %b"}
!34 = distinct !{!34, !31, !"_ZZ10calcNativePfS_S_mENK12$_1209590108clEPKfS2_S_i: %c"}
!35 = !{!33}
!36 = !{!30, !34}
!37 = !{!34}
!38 = !{!30, !33}
!39 = distinct !{!39, !40}
!40 = !{!"llvm.loop.vectorize.enable", i1 false}
